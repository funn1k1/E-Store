@model E_Store2021.ViewModels.CompanyViewModel

@using E_Store2021.Models.StaticModels;
@using E_Store2021.ViewModels;
<div class="breadcrumbs">
    <div class="container">
        <ul class="breadcrumbs_list">
            <li class="breadcrumbs_list-item">
                <a asp-controller="Home" asp-action="Index">Home</a>
            </li>
            <li class="breadcrumbs_list-item">
                <span href="#">Electronics</span>
            </li>
        </ul>
    </div>
</div>

<section class="catalog">
    <div class="container">
        <h2 class="catalog_title">
            Electronics
        </h2>
        <div class="catalog_filter">
            <div class="catalog_filter-items">
                <button>Iphone</button>
                <button>Xiaomi</button>
                <button>From 200$</button>
                <button>More</button>
            </div>
            <div class="catalog_filter-btn">
                <button class="catalog_filter-btngrid catalog_filter-button catalog_filter-button--active">
                    <img src="~/images/grid-btn.png" alt="">
                </button>
                <button class="catalog_filter-btnline catalog_filter-button">
                    <img src="~/images/line-btn.png" alt="">
                </button>
            </div>
        </div>

        <div class="catalog_inner">
            <div class="aside_btn">
                Filter
            </div>
            <aside class="catalog_inner-aside aside-filter">
                <div class="tabs-wrapper tabs-wrapper--no-scroll aside-filter_tabs">
                    <div class="tabs">
                        <a class="tab aside-filter_tab tab--active" href="#filter1">
                            <span>Parameters</span>
                        </a>
                        <a class="tab aside-filter_tab" href="#filter2">
                            <span>By brand</span>
                        </a>
                    </div>
                </div>
                <div class="tabs-container">
                    <form controller="Index" asp-action="Filter" method="get">
                        <div id="filter1" class="tabs-content aside-filter_tabs-content tabs-content--active">


                            <ul class="aside-filter_list">
                                <li class="aside-filter_item-drop">
                                    <p class="aside-filter_item-title filter_item-drop filter_item-drop--active">Price</p>
                                    <div class="aside-filter_content aside-filter_content-radio aside-filter_content-mg">
                                        <div class="aside-filter_content-box aside-filter_content-box-price">
                                            <input type="text" class="js-range-slider" name="my_range" value="" data-min="100" data-max="4000" data-from="1000" data-to="2000" />
                                            <input type="hidden" id="startPrice" name="startPrice" value="" />
                                            <input type="hidden" id="endPrice" name="endPrice" value="" />
                                        </div>
                                    </div>
                                </li>

                                <li class="aside-filter_item-list">
                                    <div class="filter_item-list">
                                        <p class="filter_item-list-title filter_item-list-select">
                                            Category
                                        </p>
                                        <select class="filter-style" id="category" name="category" asp-items="@SelectBox.Categories">
                                        </select>
                                    </div>
                                </li>

                                @{

                                }

                                <li class="aside-filter_item-list">
                                    <div class="filter_item-list">
                                        <p class="filter_item-list-title filter_item-list-select">
                                            Subcategory
                                        </p>
                                        <select class="filter-style" id="subCategory" name="subCategory" asp-items="@SelectBox.SubCategories">
                                        </select>
                                    </div>
                                </li>

                                <li class="aside-filter_item-drop">
                                    <p class="aside-filter_item-title filter_item-drop filter_item-drop--active">Model</p>
                                    <div class="aside-filter_content">
                                        <input type="text" class="filter-search flexdatalist" data-min-length="1" list="filter-search" placeholder="Input Model name">
                                        <datalist id="filter-search">
                                            @foreach (var product in Model.ProductsPagination)
                                            {
                                                <option value="@product.ProductName">@product.ProductName</option>

                                            }

                                        </datalist>
                                    </div>
                                </li>

                                <li class="aside-filter_item-drop btn-checked">
                                    <p class="aside-filter_item-title filter_item-drop filter_item-drop--active">Shares</p>
                                    <div class="aside-filter_content-row">
                                        <div class="aside-filter_content-box">
                                            <label class="aside-filter_content-label">
                                                <input name="isSale" class="filter-style" type="checkbox">
                                                <span class="btn-checked_text">SALE</span>
                                            </label>
                                        </div>
                                    </div>
                                </li>

                                <li class="aside-filter_item-drop">
                                    <p class="aside-filter_item-title filter_item-drop filter_item-drop--active">Countries</p>
                                    <div class="aside-filter_content">
                                        @foreach (var country in Model?.Countries)
                                        {
                                            <div class="aside-filter_content-box">
                                                <label class="aside-filter_content-label">
                                                    <input class="filter-style" type="checkbox" name="countries" value="@country.CountryName" @Html.Raw(country.IsChecked ? "checked" : "") />
                                                    @country.CountryName
                                                </label>
                                            </div>
                                        }
                                    </div>
                                </li>
                                <li class="aside-filter_item-drop aside-filter_item-btn">
                                    <input class="filter-btn_send filter-btn_send--active" type="submit" value="Select" />
                                    <p class="filter-extra">Extra options</p>
                                    <div class="filter-extra-content">More</div>
                                    <button class="filter-btn_reset" type="submit">Reset filter</button>
                                </li>
                            </ul>
                        </div>

                        <div id="filter2" class="tabs-content aside-filter_tabs-content">
                            <ul class="aside-filter_list">
                                <li class="aside-filter_item-drop">
                                    <p class="aside-filter_item-title filter_item-drop filter_item-drop--active">Brand</p>
                                    <div class="aside-filter_content">
                                        @foreach (var company in Model?.Companies)
                                        {
                                            <div class="aside-filter_content-box">
                                                <label class="aside-filter_content-label">
                                                    <input class="filter-style" type="checkbox" name="companies" value="@company.CompanyName" @Html.Raw(company.IsChecked ? "checked" : "") />
                                                    @company.CompanyName
                                                </label>
                                            </div>
                                        }
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </form>
                </div>
            </aside>
            <div class="catalog_inner-list">
                @{


                    List<Product> companiesProducts = new List<Product>();

                    await DisplayCheckedCompanies();

                    await DisplayProducts(Model.ProductsPagination);

                    async Task DisplayProducts(PaginatedList<ProductModel> products)
                    {
                        foreach (var product in products)
                        {
                            <div class="product-item_wrapper">
                                <button class="product-item_favorite" type="button"></button>
                                <a asp-controller="Cart" asp-action="Buy" asp-route-id="@product.ID" class="product-item_basket">
                                    <img class="cart-img" src="~/images/cart.png" alt="">
                                </a>
                                <a class="product-item_notify-link" href="#">
                                    <span>Notify on arrival</span>
                                </a>
                                <a class="product-item" href="@Url.Action("Index", "Product", new { id = product.ID })">
                                    <p class="product-item_hover-text">
                                        View product
                                    </p>
                                    @if (product.ProductPicture != null)
                                    {
                                        <img id="profilePicture" src="data:image/*;base64,@(Convert.ToBase64String(@product.ProductPicture))">
                                    }
                                    else
                                    {
                                        <img id="profilePicture"  src="">
                                    }
                                    <h4 class="product-item_title">@product.ProductName</h4>
                                    <p class="product-item_price">
                                        $@product.UnitPrice
                                    </p>
                                    <p class="product-item_notify-text">
                                        Not available
                                    </p>
                                </a>
                            </div>

                        }
                    }

                    async Task DisplayCheckedCompanies()
                    {
                        var checkedCompanies = Model.Companies.Where(c => c.IsChecked);

                        foreach (var c in checkedCompanies)
                        {
                            foreach (var product in c.Products)
                            {
                                companiesProducts.Add(product);
                            }
                        }
                    }
                }
                <div class="pagination">
                    <ul class="pagination-list">
                        @{
                            var prevDisabled = !Model.ProductsPagination.HasPreviousPage ? "disabled" : "";
                            var nextDisabled = !Model.ProductsPagination.HasNextPage ? "disabled" : "";
                        }
                        <li class="pagination-list_item">
                            <a asp-action="Index" asp-controller="Catalog"
                               asp-route-pageNumber="@(Model.ProductsPagination.PageIndex - 1)"
                               class="btnPrevNext @prevDisabled">
                                Previous
                            </a>
                        </li>
                        <li class="pagination-list_item">
                            <a asp-action="Index"
                               asp-route-pageNumber="@(Model.ProductsPagination.PageIndex + 1)"
                               class="btnPrevNext @nextDisabled">
                                Next
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    $(document).ready(function () {


        $('#startPrice').attr('value', $('.js-range-slider').data('from'));
        $('#endPrice').attr('value', $('.js-range-slider').data('to'));


        var category = $('#category');

        category.on("change", function () {
            sessionStorage['category'] = $('#category').val();
        })

        if (sessionStorage['category']) {
            $('#category').val(sessionStorage['category']);
        }

        var subCategory = $('#subCategory');

        subCategory.on("change", function () {
            sessionStorage['subCategory'] = $('#subCategory').val();
        });

        if (sessionStorage['subCategory'])
            $('#subCategory').val(sessionStorage['subCategory']);


        if (localStorage.getItem('startPrice')) {
            $('.js-range-slider').data('from', localStorage.getItem('startPrice'));
            $('#startPrice').attr('value', localStorage.getItem("startPrice"))
        }

        if (localStorage.getItem('endPrice')) {
            $('.js-range-slider').data('to', localStorage.getItem('endPrice'));
            $('#endPrice').attr('value', localStorage.getItem("endPrice"))
        }
        
        function Contains(text1, text2) {
            if (text1.indexOf(text2) != -1)
                return true;
            return false;
        }

        $('.filter-search').flexdatalist({
            minLength: 1,
        });

        $('.filter-search').on("change", function () {
            var searchText = $(this).val().toLowerCase();
            console.log(searchText);
            $(".product-item_wrapper .product-item_title").each(function () {
                if (!Contains($(this).text().toLowerCase(), searchText)) {
                    $(this).parents(".product-item_wrapper").hide();
                }
                else {
                    $(this).parents(".product-item_wrapper").show();
                }
            })
        });

        $('.aside_btn').on('click', function () {
            $(this).next().slideToggle();
        });
        $(".menu_btn").on('click', function () {
            $('.menu-mobile_list').toggleClass('menu-mobile_list--active')
        })
        $('.footer_top-drop').on('click', function () {
            $(this).next().slideToggle();
            $(this).toggleClass('footer_top-drop--active');
        });


    });
</script>

